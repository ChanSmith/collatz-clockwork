// Set by options_menu.ts
// :root {
//     --clock-table-cell-size: 128px;
//     --producer-color: #FF55FF;
//     --verifier-color: #00FF00;
// }

body {
    background: rgb(128, 128, 128);
}

.timer-background {
    transform: rotate(-90deg) translateX(-100%);
    stroke-width:50%;
}

#game-container {
    position:absolute
}

#options-menu {
    width: 50%;
    height: 50%;
    top: 25%;
    left: 25%;

    position:absolute;
    
    
    & #options-menu-wrapper {
        background-color: rgb(200,200,200);
        position:absolute;
        width: 100%;
        height: 100%;

        display: flex;
        flex-direction: column;
    }

    & .option-container {
        // & * {
        //     // flex: 1;
        // }
        // flex: 1;
        display: flex;
        flex-direction: row;
        justify-content: center;
        align-items: center;
        border: 1px solid #000000;
        
        // & .option-label {
            //     flex: 1;
            //     text-align: right;
        //     margin-right: 10px;
        // }
        
        & .sub-option-container {
            border: 1px solid #000000;
        }
    }


    & #close-options-menu {
        top: 0;
        left: 0;
        width: 25px;
        height: 25px;
        background-color: red;
    }
    &.disabled * {
        z-index: -1;
        opacity: 0;
    }
    &.enabled * {
        z-index: 10000;
        opacity: 1;
    }

}

.context-menu-theme-default {
    // background-color: #000000;
    // color: #ffffff;
    transform-origin: "left top 1px";
    background: #1b1a1a;
    
    hr {
        background-color: #555;
    }

    &>*:not(hr) {
        color: #eee;

        &:hover {
            background: #555;
        }
    }
}

.context-menu {
    font-family: 'Open Sans', sans-serif;
    position: fixed;
    z-index: 10000;
    width: 150px;
    transform: scale(0);
    transition-property: transform;
    transition-timing-function: ease-in-out;

    &--black-theme {
        background: #1b1a1a;

        hr {
            background-color: #555;
        }

        &>*:not(hr) {
            color: #eee;

            &:hover {
                background: #555;
            }
        }
    }

    &--white-theme {
        background: #fff;

        hr {
            background-color: #e4e4e4;
        }

        &>*:not(hr) {
            color: #262626;

            &:hover {
                background: #e4e4e4;
            }
        }
    }

    &.visible {
        transform: scale(1);
    }

    hr {
        margin: 2px 0;
        height: 1px;
        border: 0;
    }

    &>*:not(hr) {
        padding: 8px 10px;
        font-size: 15px;
        cursor: pointer;
        display: flex;
        align-items: center;

        i {
            margin-right: 5px;
        }
    }
}

.clock-table {
    display:flex;
    flex-direction: column;
    outline: 2px solid;
    width: min-content;
    height: fit-content;
}

.clock-table-head {
    display:flex;
    flex-direction: row;
    height: max(64px, var(--clock-table-cell-size));
}

.statistic-box {
    min-width: 64px;
    outline: 1px solid;
    flex: 1;
    border-bottom-width: 2px;
    border-bottom-style: solid;
}


.statistic-svg {
    height: 100%;
    width: 100%;
    justify-content: center;
    display: flex;
    padding: 1px;
}

.statistic-name {
    // font-size: 200%;
    text-anchor: middle;
    dominant-baseline: text-before-edge;
    
}

.statistic-value {
    // font-size: 200%;
    text-anchor: end;
    dominant-baseline: text-after-edge;
}

.clock-table-row {
    display: flex;
    flex-direction: row;


}

.clock-table-cell {
    display: flex;
    flex-direction: row;
    // margin: 1px;
    padding: 3px;
    height: var(--clock-table-cell-size);
    width: var(--clock-table-cell-size);
    
    border-left: 1px solid #000000;
    border-right: 1px solid #000000;
    border-top: 1px solid #000000;
    border-bottom: 1px solid #000000;


    z-index: 1;
    --selected-border-color: rgba(21, 255, 0, 1.0);
    --selected-border-color-off: rgba(21, 255, 0, 0.0);
    --hovered-border-color:rgba(252, 255, 85, 1.0);

    --hovered-border-color-off: rgba(252, 255, 85, 0.0);
    --rowcol-border-color: rgba(21, 255, 0, 0.568);

    &:hover {
        border: 1px dashed var(--hovered-border-color);
        z-index: 3;
        // border-radius: 1px;
    }
    
    &.row-highlighted:not(:hover){
        border-top: 1px dashed var(--rowcol-border-color);
        border-bottom: 1px dashed var(--rowcol-border-color);

        z-index: 2;
    }
    
    &.column-highlighted:not(:hover) {
        border-left: 1px dashed var(--rowcol-border-color);
        border-right: 1px dashed var(--rowcol-border-color);
        z-index: 2;
    }

    &:not(.column-highlighted,.row-highlighted):not(:hover) {
        z-index: 0;
    }

    --pulse-border-duration: 750ms;
    
    &.selected, &.dragging{
        animation: pulse-border-selected var(--pulse-border-duration) ease-in-out Infinite alternate none;
        border-style: dashed;
        z-index: 2;
    }
    &.drag-target:not(.dragging) {
        animation: pulse-border-hovered var(--pulse-border-duration) ease-in-out Infinite alternate none;
        border-style: dashed;
        z-index: 2;
        border-radius: 10%;
    }

    @keyframes pulse-border-selected {
        0% {
            border-color: var(--selected-border-color);
        }
        100% {
            border-color: var(--selected-border-color-off);
        }
    }
    @keyframes pulse-border-hovered {
        0% {
            border-color: var(--hovered-border-color);
        }

        100% {
            border-color: var(--hovered-border-color-off);
        }
    }
}

.clock{
    display:block;
    &.Producer {
        & circle {
            stroke: var(--producer-color);
        }
    }
    &.Verifier {
        & circle {
            stroke: var(--verifier-color);
        }
    }
}